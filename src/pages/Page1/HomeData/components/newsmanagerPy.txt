@app.route('/api/get_HomeNews', methods=['GET'])
def get_HomeNews():
    try:
        news = get_HomeNews_logic()
        return jsonify({"news": news}), 200  # 包裝在 news 鍵中
    except Exception as e:
        print(f"獲取新聞錯誤: {str(e)}")
        return jsonify({"error": str(e)}), 500

def get_HomeNews_logic():
    try:
        with create_connection() as conn_sql_server:
            with conn_sql_server.cursor() as cursor:
                cursor.execute("SELECT * FROM News WHERE Customer_Uuid = ?", (This_key,))
                columns = [column[0] for column in cursor.description]
                rows = cursor.fetchall()
                
                result = []
                for row in rows:
                    row_dict = {}
                    for i, column in enumerate(columns):
                        value = row[i]
                        # 處理不同類型的數據
                        if isinstance(value, bytes):
                            row_dict[column] = value.decode('utf-8', errors='ignore')
                        elif isinstance(value, datetime):
                            row_dict[column] = value.isoformat()
                        elif column == 'Publish_Date' and value:
                            # 特別處理 Publish_Date
                            try:
                                if isinstance(value, str) and '\x00' in value:
                                    # 處理特殊格式的日期
                                    row_dict[column] = datetime.now().isoformat()
                                else:
                                    row_dict[column] = value.isoformat() if isinstance(value, datetime) else str(value)
                            except Exception as e:
                                print(f"日期處理錯誤: {str(e)}")
                                row_dict[column] = None
                        else:
                            row_dict[column] = value
                    result.append(row_dict)
                
                print("處理後的結果:", result)
                return result
    except Exception as e:
        print(f"獲取新聞邏輯錯誤: {str(e)}")
        raise
with app.app_context():
    Now_HomeNews = get_HomeNews_logic()